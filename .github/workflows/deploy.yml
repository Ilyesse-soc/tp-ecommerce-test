name: Deploiement Continu (CD)

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  deploy-staging:
    name: Deploiement en environnement de test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: staging
      url: https://tp-ecommerce-staging.herokuapp.com
    
    steps:
    - name: Recuperation du code source
      uses: actions/checkout@v4
    
    - name: Configuration Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Installation des dependances
      run: npm ci
    
    - name: Execution des tests
      run: npm test
    
    - name: Construction de l'application
      run: npm run build
    
    - name: Deploiement sur Heroku Staging
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: "tp-ecommerce-staging"
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        usedocker: false
    
    - name: Tests de smoke en staging
      run: npm run test:smoke
      env:
        BASE_URL: https://tp-ecommerce-staging.herokuapp.com

  deploy-production:
    name: Deploiement en production
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.event_name == 'release'
    
    environment:
      name: production
      url: https://tp-ecommerce-prod.herokuapp.com
    
    steps:
    - name: Recuperation du code source
      uses: actions/checkout@v4
    
    - name: Configuration Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Installation des dependances
      run: npm ci --production
    
    - name: Construction optimisee pour la production
      run: npm run build:prod
    
    - name: Deploiement sur Heroku Production
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: "tp-ecommerce-prod"
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        usedocker: false
    
    - name: Tests de validation en production
      run: npm run test:production
      env:
        BASE_URL: https://tp-ecommerce-prod.herokuapp.com
    
    - name: Notification de deploiement reussi
      uses: 8398a7/action-slack@v3
      with:
        status: success
        text: "Deploiement en production reussi pour la version ${{ github.event.release.tag_name }}"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  rollback:
    name: Rollback en cas d'echec
    runs-on: ubuntu-latest
    needs: deploy-production
    if: failure()
    
    steps:
    - name: Rollback automatique
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: "tp-ecommerce-prod"
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        rollbackto: ${{ github.event.before }}
    
    - name: Notification d'echec et rollback
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        text: "Echec du deploiement - Rollback automatique effectue"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}